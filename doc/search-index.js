var searchIndex = {};
searchIndex["strcursor"] = {"doc":"This crate provides a \"cursor\" type for string slices.  It provides the ability to safely seek back and forth through a string without worrying about producing invalid UTF-8 sequences, or splitting grapheme clusters.","items":[[3,"StrCursor","strcursor","This type represents a cursor into a string slice; that is, in addition to having a beginning and end, it also has a current position between those two.  This position can be seeked left and right within those bounds.",null,null],[0,"grapheme","","Defines types for representing single grapheme clusters.",null,null],[3,"Gc","strcursor::grapheme","A slice of a single Unicode grapheme cluster (GC) (akin to `str`).",null,null],[3,"GcBuf","","An owned, single Unicode grapheme cluster (akin to `String`).",null,null],[6,"ToLowercase","","An iterator over the lower case mapping of a given grapheme cluster, returned from `Gc::to_lowercase`.",null,null],[6,"ToUppercase","","An iterator over the lower case mapping of a given grapheme cluster, returned from `Gc::to_uppercase`.",null,null],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"gc"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"self"},{"name":"gc"}],"output":{"name":"bool"}}],[11,"cmp","","",0,{"inputs":[{"name":"self"},{"name":"gc"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"gc"}],"output":{"name":"option"}}],[11,"lt","","",0,{"inputs":[{"name":"self"},{"name":"gc"}],"output":{"name":"bool"}}],[11,"le","","",0,{"inputs":[{"name":"self"},{"name":"gc"}],"output":{"name":"bool"}}],[11,"gt","","",0,{"inputs":[{"name":"self"},{"name":"gc"}],"output":{"name":"bool"}}],[11,"ge","","",0,{"inputs":[{"name":"self"},{"name":"gc"}],"output":{"name":"bool"}}],[11,"hash","","",0,null],[11,"from_str","","Create a new `Gc` from the given string slice.",0,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[11,"from_str_unchecked","","Create a new `Gc` from the given string slice.",0,{"inputs":[{"name":"str"}],"output":{"name":"gc"}}],[11,"split_from","","Try to split a single grapheme cluster from the start of `s`.",0,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[11,"len","","Returns the length of this grapheme cluster in bytes.",0,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"has_marks","","Does this grapheme cluster have additional marks applied to it?",0,{"inputs":[{"name":"self"}],"output":{"name":"bool"}}],[11,"as_bytes","","Converts this to a byte slice.",0,null],[11,"as_str","","Converts this to a string slice.",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"base_char","","Returns the \"base\" code point.",0,{"inputs":[{"name":"self"}],"output":{"name":"char"}}],[11,"base","","Returns the \"base\" code point as a grapheme cluster.",0,{"inputs":[{"name":"self"}],"output":{"name":"gc"}}],[11,"mark_str","","Returns the combining marks as a string slice.",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"chars","","An iterator over the code points of this grapheme cluster.",0,{"inputs":[{"name":"self"}],"output":{"name":"chars"}}],[11,"char_indices","","An iterator over the code points of this grapheme cluster, and their associated byte offsets.",0,{"inputs":[{"name":"self"}],"output":{"name":"charindices"}}],[11,"bytes","","An iterator over the bytes of this grapheme cluster.",0,{"inputs":[{"name":"self"}],"output":{"name":"bytes"}}],[11,"to_lowercase","","Returns an iterator over the code points in the lower case equivalent of this grapheme cluster.",0,{"inputs":[{"name":"self"}],"output":{"name":"tolowercase"}}],[11,"to_uppercase","","Returns an iterator over the code points in the upper case equivalent of this grapheme cluster.",0,{"inputs":[{"name":"self"}],"output":{"name":"touppercase"}}],[11,"as_ref","","",0,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"as_ref","","",0,null],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",0,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"gc"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"gcbuf"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","","",0,{"inputs":[{"name":"self"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"gc"}],"output":{"name":"option"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"option"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"gcbuf"}],"output":{"name":"option"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"option"}}],[11,"partial_cmp","","",0,{"inputs":[{"name":"self"},{"name":"cow"}],"output":{"name":"option"}}],[11,"to_owned","","",0,null],[11,"clone","","",1,{"inputs":[{"name":"self"}],"output":{"name":"gcbuf"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"gcbuf"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"self"},{"name":"gcbuf"}],"output":{"name":"bool"}}],[11,"cmp","","",1,{"inputs":[{"name":"self"},{"name":"gcbuf"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"gcbuf"}],"output":{"name":"option"}}],[11,"lt","","",1,{"inputs":[{"name":"self"},{"name":"gcbuf"}],"output":{"name":"bool"}}],[11,"le","","",1,{"inputs":[{"name":"self"},{"name":"gcbuf"}],"output":{"name":"bool"}}],[11,"gt","","",1,{"inputs":[{"name":"self"},{"name":"gcbuf"}],"output":{"name":"bool"}}],[11,"ge","","",1,{"inputs":[{"name":"self"},{"name":"gcbuf"}],"output":{"name":"bool"}}],[11,"hash","","",1,null],[11,"from_string_unchecked","","Create a new `GcBuf` from the given `String`.",1,{"inputs":[{"name":"string"}],"output":{"name":"gcbuf"}}],[11,"as_gc","","Returns a borrowed grapheme cluster slice.",1,{"inputs":[{"name":"self"}],"output":{"name":"gc"}}],[11,"as_ref","","",1,{"inputs":[{"name":"self"}],"output":{"name":"gc"}}],[11,"as_ref","","",1,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"as_ref","","",1,null],[11,"borrow","","",1,{"inputs":[{"name":"self"}],"output":{"name":"gc"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"default","","",1,{"inputs":[],"output":{"name":"self"}}],[11,"deref","","",1,{"inputs":[{"name":"self"}],"output":{"name":"gc"}}],[11,"fmt","","",1,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"from","","",1,{"inputs":[{"name":"gc"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"char"}],"output":{"name":"self"}}],[11,"into","","",1,{"inputs":[{"name":"self"}],"output":{"name":"box"}}],[11,"into","","",1,{"inputs":[{"name":"self"}],"output":{"name":"string"}}],[11,"into","","",1,{"inputs":[{"name":"self"}],"output":{"name":"vec"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"gc"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"gc"}],"output":{"name":"bool"}}],[11,"eq","","",1,{"inputs":[{"name":"self"},{"name":"cow"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"char"}],"output":{"name":"option"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"gc"}],"output":{"name":"option"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"string"}],"output":{"name":"option"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"str"}],"output":{"name":"option"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"gc"}],"output":{"name":"option"}}],[11,"partial_cmp","","",1,{"inputs":[{"name":"self"},{"name":"cow"}],"output":{"name":"option"}}],[11,"new_at_start","strcursor","Create a new cursor at the start of `s`.",2,{"inputs":[{"name":"str"}],"output":{"name":"strcursor"}}],[11,"new_at_end","","Create a new cursor past at the end of `s`.",2,{"inputs":[{"name":"str"}],"output":{"name":"strcursor"}}],[11,"new_at_left_of_byte_pos","","Create a new cursor at the first grapheme cluster which begins at or to the left of the given byte position.",2,{"inputs":[{"name":"str"},{"name":"usize"}],"output":{"name":"strcursor"}}],[11,"new_at_right_of_byte_pos","","Create a new cursor at the first grapheme cluster which begins at or to the right of the given byte position.",2,{"inputs":[{"name":"str"},{"name":"usize"}],"output":{"name":"strcursor"}}],[11,"new_at_cp_left_of_byte_pos","","Create a new cursor at the first code point which begins at or to the left of the given byte position.",2,{"inputs":[{"name":"str"},{"name":"usize"}],"output":{"name":"strcursor"}}],[11,"new_at_cp_right_of_byte_pos","","Create a new cursor at the first code point which begins at or to the right of the given byte position.",2,{"inputs":[{"name":"str"},{"name":"usize"}],"output":{"name":"strcursor"}}],[11,"at_prev","","Returns a new cursor at the beginning of the previous grapheme cluster, or `None` if the cursor is currently positioned at the beginning of the string.",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"at_next","","Returns a new cursor at the beginning of the next grapheme cluster, or `None` if the cursor is currently positioned at the end of the string.",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"at_prev_cp","","Returns a new cursor at the beginning of the previous code point, or `None` if the cursor is currently positioned at the beginning of the string.",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"at_next_cp","","Returns a new cursor at the beginning of the next code point, or `None` if the cursor is currently positioned at the end of the string.",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"seek_prev","","Seeks the cursor to the beginning of the previous grapheme cluster.",2,{"inputs":[{"name":"self"}],"output":null}],[11,"seek_next","","Seeks the cursor to the beginning of the next grapheme cluster.",2,{"inputs":[{"name":"self"}],"output":null}],[11,"seek_prev_cp","","Seeks the cursor to the beginning of the previous code point.",2,{"inputs":[{"name":"self"}],"output":null}],[11,"seek_next_cp","","Seeks the cursor to the beginning of the next code point.",2,{"inputs":[{"name":"self"}],"output":null}],[11,"prev","","Returns both the previous grapheme cluster and the cursor having seeked before it.",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"prev_cp","","Returns both the previous code point and the cursor having seeked before it.",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next","","Returns both the next grapheme cluster and the cursor having seeked past it.",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"next_cp","","Returns both the next code point and the cursor having seeked past it.",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"before","","Returns the grapheme cluster immediately to the left of the cursor, or `None` is the cursor is at the start of the string.",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"after","","Returns the grapheme cluster immediately to the right of the cursor, or `None` is the cursor is at the end of the string.",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"slice_before","","Returns the contents of the string to the left of the cursor.",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"slice_after","","Returns the contents of the string to the right of the cursor.",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"slice_between","","Returns the contents of the string *between* this cursor and another cursor.",2,{"inputs":[{"name":"self"},{"name":"strcursor"}],"output":{"name":"option"}}],[11,"cp_before","","Returns the code point immediately to the left of the cursor, or `None` is the cursor is at the start of the string.",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"cp_after","","Returns the code point immediately to the right of the cursor, or `None` is the cursor is at the end of the string.",2,{"inputs":[{"name":"self"}],"output":{"name":"option"}}],[11,"slice_all","","Returns the entire string slice behind the cursor.",2,{"inputs":[{"name":"self"}],"output":{"name":"str"}}],[11,"byte_pos","","Returns the cursor's current position within the string as the number of UTF-8 code units from the beginning of the string.",2,{"inputs":[{"name":"self"}],"output":{"name":"usize"}}],[11,"unsafe_seek_left","","Seeks exactly `bytes` left, without performing any bounds or validity checks.",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"unsafe_seek_right","","Seeks exactly `bytes` right, without performing any bounds or validity checks.",2,{"inputs":[{"name":"self"},{"name":"usize"}],"output":null}],[11,"unsafe_set_at","","Seeks to the start of `s`, without performing any bounds or validity checks.",2,{"inputs":[{"name":"self"},{"name":"str"}],"output":null}],[11,"clone","","",2,{"inputs":[{"name":"self"}],"output":{"name":"strcursor"}}],[11,"fmt","","",2,{"inputs":[{"name":"self"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"self"},{"name":"strcursor"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"self"},{"name":"strcursor"}],"output":{"name":"bool"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"self"},{"name":"strcursor"}],"output":{"name":"option"}}],[11,"hash","","",2,{"inputs":[{"name":"self"},{"name":"h"}],"output":null}]],"paths":[[3,"Gc"],[3,"GcBuf"],[3,"StrCursor"]]};
initSearch(searchIndex);
